'use client';

import {
    EnvelopeIcon,
    FolderOpenIcon,
    MagnifyingGlassIcon,
    UsersIcon,
} from '@heroicons/react/24/outline'

const actions = [
    {
        title: 'Keyword Search',
        href: '/search',
        icon: MagnifyingGlassIcon,
        iconForeground: 'text-teal-700',
        iconBackground: 'bg-teal-50',
        description: 'Perform advanced keyword searches to find relevant leads and opportunities quickly and efficiently.',
    },
    {
        title: 'Agent Reports',
        href: '/reports',
        icon: FolderOpenIcon,
        iconForeground: 'text-purple-700',
        iconBackground: 'bg-purple-50',
        description: 'Access comprehensive reports generated by the AI agent, summarizing key findings and insights.',
    },
    {
        title: 'Lead Manager',
        href: '/lead-manager',
        icon: UsersIcon,
        iconForeground: 'text-sky-700',
        iconBackground: 'bg-sky-50',
        description: 'Manage your leads effectively with tools to track, organize, and prioritize potential clients.',
    },
    {
        title: 'Lead Outreach',
        href: '/lead-outreach',
        icon: EnvelopeIcon,
        iconForeground: 'text-yellow-700',
        iconBackground: 'bg-yellow-50',
        description: 'Automate and streamline your outreach efforts with customized email templates and tracking.',
    }
]

function classNames(...classes: string[]) {
    return classes.filter(Boolean).join(' ')
}

export default function Dashboard() {
  return (
    <div className="divide-y divide-gray-200 overflow-hidden rounded-lg bg-gray-200 shadow sm:grid sm:grid-cols-2 sm:gap-px sm:divide-y-0">
      {actions.map((action, actionIdx) => (
        <div
            key={action.title}
            className={classNames(
                actionIdx === 0 ? 'rounded-tl-lg rounded-tr-lg sm:rounded-tr-none' : '',
                actionIdx === 1 ? 'sm:rounded-tr-lg' : '',
                actionIdx === actions.length - 2 ? 'sm:rounded-bl-lg' : '',
                actionIdx === actions.length - 1 ? 'rounded-bl-lg rounded-br-lg sm:rounded-bl-none' : '',
                'group relative bg-gray-800 p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-green-500',
            )}
        >
            <div>
                <span
                  className={classNames(
                    action.iconBackground,
                    action.iconForeground,
                    'inline-flex rounded-lg p-3 ring-4 ring-white',
                  )}
                >
                <action.icon aria-hidden="true" className="h-6 w-6" />
                </span>
            </div>
            <div className="mt-8">
                <h3 className="text-base font-semibold leading-6 text-gray-50">
                <a href={action.href} className="focus:outline-none">
                    {/* Extend touch target to entire panel */}
                    <span aria-hidden="true" className="absolute inset-0" />
                    {action.title}
                </a>
                </h3>
                <p className="mt-2 text-sm text-gray-500">
                  {action.description}
                </p>
            </div>
            <span
                aria-hidden="true"
                className="pointer-events-none absolute right-6 top-6 text-gray-300 group-hover:text-gray-400"
            >
                <svg fill="currentColor" viewBox="0 0 24 24" className="h-6 w-6">
                <path d="M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z" />
                </svg>
            </span>
        </div>
      ))}
    </div>
  )
}
  